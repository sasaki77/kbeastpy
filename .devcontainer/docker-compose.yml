version: "3.8"
services:
  devcontainer:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ../:/workspaces/kbeastpy:cached
      - kbeastpy-venv:/workspaces/kbeastpy/.venv
    command: sleep infinity

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.2
    hostname: elastic
    ports:
      - "9200:9200"
    environment:
      discovery.type: single-node
      bootstrap.memory_lock: "true"
      xpack.security.enabled: "false"
      ES_JAVA_OPTS: "-Xmx1G"
      http.host: 0.0.0.0
    volumes:
      - kbeastpy-data:/usr/share/elasticsearch/data

  kafka:
    image: apache/kafka:latest
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: INTERNAL://:19092,CONTROLLER://localhost:9093,EXTERNAL://:9092,DOCKER://kafka:29092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://localhost:19092,EXTERNAL://localhost:9092,DOCKER://kafka:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3

  alarmserver:
    image: ghcr.io/controlsystemstudio/phoebus/service-alarm-server:master
    volumes:
      - ./settings:/home
    command: >
      /bin/bash -c "
      java -jar /alarmserver/service-alarm-server-*.jar -settings /home/settings.properties -config Accelerator -server kafka:29092 -noshell"

  alarmserver-import:
    image: ghcr.io/controlsystemstudio/phoebus/service-alarm-server:master
    volumes:
      - ./settings:/home
    command: >
      /bin/bash -c "
      java -jar /alarmserver/service-alarm-server-*.jar -config Accelerator -import /home/Accelerator.xml -server kafka:29092"

  alarmlogger:
    image: ghcr.io/controlsystemstudio/phoebus/service-alarm-logger:master
    ports:
      - "8080:8080"
    command: >
      /bin/bash -c "
      java -jar /alarmlogger/service-alarm-logger-*.jar -bootstrap.servers kafka:29092 -es_host elastic -topics "Accelerator" -noshell"

  ioc:
    image: ghcr.io/epics-containers/epics-base-developer:7.0.8ad3
    volumes:
      - ./settings:/home
    stdin_open: true
    tty: true
    command: ["softIocPVA", "-d", "/home/test.db"]

volumes:
  kbeastpy-venv:
  kbeastpy-data:
